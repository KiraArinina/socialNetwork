{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusHook.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusHook","props","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","createElement","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","picture","src","descriptionBlock","photos","large","fullName","aboutMe","contacts","vk","lookingForAJobDescription","Preloader","Post","item","message","likes","maxLength10","maxLengthCreator","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","MyPosts","memo","console","log","postsElements","posts","map","p","key","id","createRef","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Object","assign","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.389673ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1kyXp\",\"picture\":\"ProfileInfo_picture__23Bdl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1vpFf\",\"posts\":\"MyPosts_posts__39wq0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1YATo\"};","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\ncomponentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n}\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || '-------'}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProfileStatus","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusHook = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || '-------'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                    value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusHook","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from './ProfileStatus'\r\nimport ProfileStatusHook from \"./ProfileStatusHook\";\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.picture}>\r\n            <img src='https://abrakadabra.fun/uploads/posts/2022-01/1643461021_1-abrakadabra-fun-p-krasivii-fon-prirodi-anime-1.jpg'/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large} />\r\n                <div>{props.profile.fullName}</div>\r\n                <div>{props.profile.aboutMe}</div>\r\n                <div>{props.profile.contacts.vk}</div>\r\n                <div>{props.profile.lookingForAJobDescription}</div>\r\n                <ProfileStatusHook status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n\r\n        </div>)\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return <div className={s.item}>\r\n        <img src='https://cs10.pikabu.ru/post_img/big/2018/05/03/10/152536803913230106.jpg' />\r\n        {props.message}\r\n        <div>\r\n            <span>like</span> {props.likes}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required, maxLengthCreator} from './../../../utils/validators'\r\nimport {Textarea} from './../../common/FormsControl/FormsControls'\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name='newPostText' validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>)\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: 'ProfileAddPostForm'}) (AddPostForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n    console.log('RENDER')\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likes={p.likes} key={p.id} />);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return <div className={s.postsBlock}>\r\n        <h3>My posts</h3>\r\n        <AddPostFormRedux onSubmit={onAddPost} />\r\n        <div className={s.posts}>\r\n            {postsElements}\r\n        </div>\r\n    </div>\r\n})\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return <div>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer />\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../Redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}